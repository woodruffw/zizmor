Static analysis for GitHub Actions

Usage: zizmor [OPTIONS] <INPUTS>...

Arguments:
  <INPUTS>...
          The inputs to audit.
          
          These can be individual workflow filenames, entire directories, or a `user/repo` slug for a GitHub repository. In the latter case, a `@ref` can be appended to audit the repository at a particular git reference state.

Options:
  -p, --pedantic
          Emit 'pedantic' findings.
          
          This is an alias for --persona=pedantic.

      --persona <PERSONA>
          The persona to use while auditing
          
          [default: regular]

          Possible values:
          - auditor:  The "auditor" persona (false positives OK)
          - pedantic: The "pedantic" persona (code smells OK)
          - regular:  The "regular" persona (minimal false positives)

  -o, --offline
          Perform only offline operations.
          
          This disables all online audit rules, and prevents zizmor from auditing remote repositories.
          
          [env: ZIZMOR_OFFLINE=]

      --gh-token <GH_TOKEN>
          The GitHub API token to use
          
          [env: GH_TOKEN=]

      --no-online-audits
          Perform only offline audits.
          
          This is a weaker version of `--offline`: instead of completely forbidding all online operations, it only disables audits that require connectivity.
          
          [env: ZIZMOR_NO_ONLINE_AUDITS=]

  -v, --verbose...
          Increase logging verbosity

  -q, --quiet...
          Decrease logging verbosity

  -n, --no-progress
          Disable the progress bar. This is useful primarily when running with a high verbosity level, as the two will fight for stderr

      --format <FORMAT>
          The output format to emit. By default, plain text will be emitted
          
          [default: plain]
          [possible values: plain, json, sarif]

  -c, --config <CONFIG>
          The configuration file to load. By default, any config will be discovered relative to $CWD

      --no-config
          Disable all configuration loading

      --no-exit-codes
          Disable all error codes besides success and tool failure

      --min-severity <MIN_SEVERITY>
          Filter all results below this severity
          
          [possible values: unknown, informational, low, medium, high]

      --min-confidence <MIN_CONFIDENCE>
          Filter all results below this confidence
          
          [possible values: unknown, low, medium, high]

  -h, --help
          Print help (see a summary with '-h')

  -V, --version
          Print version
